import React from 'react';
import { Link } from 'react-router-dom';

const BrandPageSetup = () => {
  const features = [
    {
      icon: "ЁЯОи",
      title: "ржкрзНрж░ржлрзЗрж╢ржирж╛рж▓ ржбрж┐ржЬрж╛ржЗржи",
      description: "ржЖржХрж░рзНрж╖ржгрзАржпрж╝ ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржУ ржХржнрж╛рж░ ржлржЯрзЛ ржбрж┐ржЬрж╛ржЗржи"
    },
    {
      icon: "ЁЯУЭ",
      title: "ржХржирзНржЯрзЗржирзНржЯ рж░рж╛ржЗржЯрж┐ржВ",
      description: "ржПржиржЧрзЗржЬрж┐ржВ About рж╕рзЗржХрж╢ржи ржПржмржВ ржмрж┐ржмрж░ржг рж▓рзЗржЦрж╛"
    },
    {
      icon: "тЪЩя╕П",
      title: "ржкрзЗржЬ ржЕржкржЯрж┐ржорж╛ржЗржЬрзЗрж╢ржи",
      description: "SEO ржПржмржВ рж░рж┐ржЪ ржмрзГржжрзНржзрж┐рж░ ржЬржирзНржп ржЕржкржЯрж┐ржорж╛ржЗржЬрзЗрж╢ржи"
    },
    {
      icon: "ЁЯФз",
      title: "рж╕рзЗржЯрж┐ржВрж╕ ржХржиржлрж┐ржЧрж╛рж░",
      description: "рж╕ржорзНржкрзВрж░рзНржг рж╕рзЗржЯрж┐ржВрж╕ ржПржмржВ ржкрзНрж░рж╛ржЗржнрзЗрж╕рж┐ рж╕рзЗржЯржЖржк"
    },
    {
      icon: "ЁЯдЦ",
      title: "ржЪрзНржпрж╛ржЯржмржЯ рж╕рзЗржЯржЖржк",
      description: "ржЕржЯрзЛ рж░рж┐ржкрзНрж▓рж╛ржЗ ржПржмржВ ржорзЗрж╕рзЗржЮрзНржЬрж╛рж░ ржЕржЯрзЛржорзЗрж╢ржи"
    },
    {
      icon: "ЁЯУК",
      title: "ржПржирж╛рж▓рж┐ржЯрж┐ржХрзНрж╕ рж╕рзЗржЯржЖржк",
      description: "ржкрзЗржЬ ржЗржирж╕рж╛ржЗржЯ ржПржмржВ ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи"
    }
  ];

  const platforms = [
    {
      name: "Facebook",
      icon: "ЁЯУШ",
      services: ["ржмрж┐ржЬржирзЗрж╕ ржкрзЗржЬ рж╕рзЗржЯржЖржк", "ржнрзЗрж░рж┐ржлрж┐ржХрзЗрж╢ржи", "рж╢ржк рж╕рзЗржЯржЖржк", "CTA ржмрж╛ржЯржи"]
    },
    {
      name: "Instagram",
      icon: "ЁЯУ╕",
      services: ["ржмрж┐ржЬржирзЗрж╕ ржкрзНрж░рзЛржлрж╛ржЗрж▓", "рж╣рж╛ржЗрж▓рж╛ржЗржЯрж╕ рж╕рзЗржЯржЖржк", "рж▓рж┐ржВржХ ржЗржи ржмрж╛ржпрж╝рзЛ", "рж╢ржкрж┐ржВ ржЯрзНржпрж╛ржЧ"]
    },
    {
      name: "LinkedIn",
      icon: "ЁЯТ╝",
      services: ["ржХрзЛржорзНржкрж╛ржирж┐ ржкрзЗржЬ", "ржкрзНрж░рзЛржбрж╛ржХрзНржЯ рж╢рзЛржХрзЗрж╕", "ржЬржм ржкрзЛрж╕рзНржЯрж┐ржВ", "ржПржирж╛рж▓рж┐ржЯрж┐ржХрзНрж╕"]
    }
  ];

  const packages = [
    {
      name: "ржмрзЗрж╕рж┐ржХ рж╕рзЗржЯржЖржк",
      price: "рзй,рзжрзжрзж",
      duration: "рзз ржкрзЗржЬ",
      features: [
        "рззржЯрж┐ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо рж╕рзЗржЯржЖржк",
        "ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржУ ржХржнрж╛рж░ ржЗржорзЗржЬ",
        "ржмрзЗрж╕рж┐ржХ About рж╕рзЗржХрж╢ржи",
        "ржХржирзНржЯрж╛ржХрзНржЯ ржЗржиржлрж░ржорзЗрж╢ржи",
        "ржкрзНрж░рж╛ржЗржнрзЗрж╕рж┐ рж╕рзЗржЯрж┐ржВрж╕"
      ]
    },
    {
      name: "ржкрзНрж░ржлрзЗрж╢ржирж╛рж▓ рж╕рзЗржЯржЖржк",
      price: "рзо,рзжрзжрзж",
      duration: "рзз ржкрзЗржЬ",
      popular: true,
      features: [
        "рззржЯрж┐ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо рж╕рзЗржЯржЖржк",
        "ржХрж╛рж╕рзНржЯржо ржЧрзНрж░рж╛ржлрж┐ржХ ржбрж┐ржЬрж╛ржЗржи",
        "ржПржиржЧрзЗржЬрж┐ржВ ржХржирзНржЯрзЗржирзНржЯ рж░рж╛ржЗржЯрж┐ржВ",
        "ржЪрзНржпрж╛ржЯржмржЯ рж╕рзЗржЯржЖржк",
        "CTA ржмрж╛ржЯржи ржХржиржлрж┐ржЧрж╛рж░",
        "ржПржирж╛рж▓рж┐ржЯрж┐ржХрзНрж╕ рж╕рзЗржЯржЖржк",
        "рзз рж╕ржкрзНрждрж╛рж╣ рж╕рж╛ржкрзЛрж░рзНржЯ"
      ]
    },
    {
      name: "ржорж╛рж▓рзНржЯрж┐-ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо",
      price: "рзирзж,рзжрзжрзж",
      duration: "рзй ржкрзЗржЬ",
      features: [
        "рзйржЯрж┐ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо рж╕рзЗржЯржЖржк",
        "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо ржбрж┐ржЬрж╛ржЗржи",
        "ржмрзНрж░рзНржпрж╛ржирзНржбрж┐ржВ ржХржирж╕рж┐рж╕ржЯрзЗржирзНрж╕рж┐",
        "ржХрзНрж░рж╕-ржкрзЛрж╕рзНржЯрж┐ржВ рж╕рзЗржЯржЖржк",
        "ржПржбржнрж╛ржирзНрж╕ ржЪрзНржпрж╛ржЯржмржЯ",
        "ржХржирзНржЯрзЗржирзНржЯ ржХрзНржпрж╛рж▓рзЗржирзНржбрж╛рж░",
        "рзз ржорж╛рж╕ рж╕рж╛ржкрзЛрж░рзНржЯ"
      ]
    }
  ];

  const setupSteps = [
    {
      step: "рзз",
      title: "ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝рждрж╛ рж╕ржВржЧрзНрж░рж╣",
      description: "ржЖржкржирж╛рж░ ржмрзНржпржмрж╕рж╛ рж╕ржорзНржкрж░рзНржХрзЗ рждржерзНржп ржПржмржВ рж▓рзЛржЧрзЛ рж╕ржВржЧрзНрж░рж╣"
    },
    {
      step: "рзи",
      title: "ржкрзЗржЬ рждрзИрж░рж┐",
      description: "рж╕ржорзНржкрзВрж░рзНржг ржкрзЗржЬ рж╕рзЗржЯржЖржк ржПржмржВ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи"
    },
    {
      step: "рзй",
      title: "ржбрж┐ржЬрж╛ржЗржи ржУ ржХржирзНржЯрзЗржирзНржЯ",
      description: "ржЧрзНрж░рж╛ржлрж┐ржХрзНрж╕ ржбрж┐ржЬрж╛ржЗржи ржПржмржВ ржХржирзНржЯрзЗржирзНржЯ ржпрзБржХрзНржд ржХрж░рж╛"
    },
    {
      step: "рзк",
      title: "ржЕржкржЯрж┐ржорж╛ржЗржЬрзЗрж╢ржи ржУ рж▓ржЮрзНржЪ",
      description: "ржлрж╛ржЗржирж╛рж▓ ржЪрзЗржХ ржПржмржВ ржкрзЗржЬ рж▓рж╛ржЗржн ржХрж░рж╛"
    }
  ];

  const checklist = [
    "тЬУ ржкрзЗржЬ ржирж╛ржо ржПржмржВ ржЗржЙржЬрж╛рж░ржирзЗржо ржнрзЗрж░рж┐ржлрж┐ржХрзЗрж╢ржи",
    "тЬУ ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржУ ржХржнрж╛рж░ ржлржЯрзЛ (рззрзжрзорзжxрззрзжрзорзж ржПржмржВ рззрзмрзкрзжxрзорзлрзм)",
    "тЬУ About рж╕рзЗржХрж╢ржи (рззрзлрзл ржХрзНржпрж╛рж░рзЗржХрзНржЯрж╛рж░ рж╕рж░рзНржЯ ржПржмржВ рж▓ржВ ржбрзЗрж╕ржХрзНрж░рж┐ржкрж╢ржи)",
    "тЬУ ржХржирзНржЯрж╛ржХрзНржЯ ржЗржиржлрж░ржорзЗрж╢ржи (ржлрзЛржи, ржЗржорзЗржЗрж▓, ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ)",
    "тЬУ ржмрзНржпржмрж╕рж╛рж░ ржарж┐ржХрж╛ржирж╛ ржПржмржВ ржорзНржпрж╛ржк рж▓рзЛржХрзЗрж╢ржи",
    "тЬУ ржмрзНржпржмрж╕рж╛рж░ ржзрж░ржи ржПржмржВ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐",
    "тЬУ ржкрзЗржЬ CTA ржмрж╛ржЯржи (Learn More, Shop Now, Contact Us)",
    "тЬУ ржорзЗрж╕рзЗржЮрзНржЬрж╛рж░ ржЕржЯрзЛ рж░рж┐ржкрзНрж▓рж╛ржЗ",
    "тЬУ ржкрзЗржЬ рж░рзЛрж▓ ржПржмржВ ржкрж╛рж░ржорж┐рж╢ржи",
    "тЬУ ржЗржирж╕рж╛ржЗржЯ ржПржмржВ ржПржирж╛рж▓рж┐ржЯрж┐ржХрзНрж╕ ржПржирзЗржмрж▓"
  ];

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-cyan-500 via-blue-500 to-purple-600 text-white py-20">
        <div className="max-w-6xl mx-auto px-4">
          <div className="text-center">
            <div className="text-6xl mb-6">ЁЯУЭ</div>
            <h1 className="text-4xl md:text-5xl font-bold mb-6">
              ржкрзНрж░ржлрзЗрж╢ржирж╛рж▓ ржмрзНрж░рзНржпрж╛ржирзНржб ржкрзЗржЬ рж╕рзЗржЯржЖржк рж╕рж╛рж░рзНржнрж┐рж╕
            </h1>
            <p className="text-xl mb-8 text-gray-100 max-w-3xl mx-auto">
              Facebook, Instagram ржПржмржВ LinkedIn-ржП ржЖржкржирж╛рж░ ржмрзНржпржмрж╕рж╛рж░ ржЬржирзНржп рж╕ржорзНржкрзВрж░рзНржг ржЕржкржЯрж┐ржорж╛ржЗржЬржб 
              ржПржмржВ ржкрзНрж░ржлрзЗрж╢ржирж╛рж▓ ржмрзНрж░рзНржпрж╛ржирзНржб ржкрзЗржЬ рждрзИрж░рж┐ ржХрж░рж┐ред
            </p>
            <div className="flex flex-wrap justify-center gap-4">
              <Link
                to="/contact"
                className="bg-white text-blue-600 px-8 py-4 rounded-full font-bold hover:bg-gray-100 transition"
              >
                ржкрзЗржЬ рж╕рзЗржЯржЖржк рж╢рзБрж░рзБ ржХрж░рзБржи тЖТ
              </Link>
              <button className="border-2 border-white px-8 py-4 rounded-full font-bold hover:bg-white hover:text-blue-600 transition">
                ржкрзЛрж░рзНржЯржлрзЛрж▓рж┐ржУ ржжрзЗржЦрзБржи
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-16 bg-white">
        <div className="max-w-6xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
              ржЖржорж╛ржжрзЗрж░ рж╕рзЗржЯржЖржк рж╕рж╛рж░рзНржнрж┐рж╕
            </h2>
            <p className="text-lg text-gray-600">рж╕ржорзНржкрзВрж░рзНржг ржкрзЗржЬ рж╕рзЗржЯржЖржк рж╕рж▓рж┐ржЙрж╢ржи</p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {features.map((feature, index) => (
              <div
                key={index}
                className="bg-gradient-to-br from-cyan-50 to-blue-50 p-6 rounded-xl shadow-lg hover:shadow-xl transition transform hover:-translate-y-1"
              >
                <div className="text-4xl mb-4">{feature.icon}</div>
                <h3 className="text-xl font-bold text-gray-800 mb-2">{feature.title}</h3>
                <p className="text-gray-600">{feature.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Platforms Section */}
      <section className="py-16 bg-gradient-to-b from-gray-50 to-white">
        <div className="max-w-6xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
              ржЖржорж░рж╛ ржпрзЗ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржорзЗ ржХрж╛ржЬ ржХрж░рж┐
            </h2>
            <p className="text-lg text-gray-600">рж╕ржм ржорзЗржЬрж░ рж╕рзЛрж╢рзНржпрж╛рж▓ ржорж┐ржбрж┐ржпрж╝рж╛ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо</p>
          </div>
          <div className="grid md:grid-cols-3 gap-8">
            {platforms.map((platform, index) => (
              <div
                key={index}
                className="bg-white p-8 rounded-2xl shadow-lg hover:shadow-2xl transition border-2 border-gray-100"
              >
                <div className="text-5xl mb-4 text-center">{platform.icon}</div>
                <h3 className="text-2xl font-bold text-gray-800 mb-6 text-center">{platform.name}</h3>
                <ul className="space-y-3">
                  {platform.services.map((service, idx) => (
                    <li key={idx} className="flex items-center gap-3">
                      <span className="w-2 h-2 bg-blue-500 rounded-full"></span>
                      <span className="text-gray-700">{service}</span>
                    </li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Setup Process */}
      <section className="py-16 bg-white">
        <div className="max-w-6xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
              рж╕рзЗржЯржЖржк ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛
            </h2>
            <p className="text-lg text-gray-600">рзкржЯрж┐ рж╕рж╣ржЬ ржзрж╛ржкрзЗ рж╕ржорзНржкрзВрж░рзНржг рж╕рзЗржЯржЖржк</p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {setupSteps.map((item, index) => (
              <div key={index} className="relative">
                <div className="bg-gradient-to-br from-cyan-50 to-blue-50 p-6 rounded-xl shadow-lg border-t-4 border-blue-500">
                  <div className="w-16 h-16 bg-blue-500 text-white rounded-full flex items-center justify-center text-2xl font-bold mb-4">
                    {item.step}
                  </div>
                  <h3 className="text-xl font-bold text-gray-800 mb-2">{item.title}</h3>
                  <p className="text-gray-600">{item.description}</p>
                </div>
                {index < setupSteps.length - 1 && (
                  <div className="hidden lg:block absolute top-1/2 -right-4 transform -translate-y-1/2">
                    <span className="text-blue-500 text-3xl">тЖТ</span>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Checklist Section */}
      <section className="py-16 bg-gradient-to-b from-gray-50 to-white">
        <div className="max-w-4xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
              рж╕рзЗржЯржЖржк ржЪрзЗржХрж▓рж┐рж╕рзНржЯ
            </h2>
            <p className="text-lg text-gray-600">ржЖржорж░рж╛ ржпрж╛ ржпрж╛ ржХрж░рж┐</p>
          </div>
          <div className="bg-white rounded-2xl shadow-xl p-8 border-2 border-blue-100">
            <div className="grid md:grid-cols-2 gap-4">
              {checklist.map((item, index) => (
                <div
                  key={index}
                  className="flex items-start gap-3 p-3 rounded-lg hover:bg-blue-50 transition"
                >
                  <span className="text-green-500 text-xl flex-shrink-0">тЬУ</span>
                  <span className="text-gray-700">{item.replace('тЬУ ', '')}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Pricing Section */}
      <section className="py-16 bg-white">
        <div className="max-w-6xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
              ржкрзНрж░рж╛ржЗрж╕рж┐ржВ ржкрзНрж▓рзНржпрж╛ржи
            </h2>
            <p className="text-lg text-gray-600">ржЖржкржирж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржЕржирзБржпрж╛ржпрж╝рзА ржкрзНржпрж╛ржХрзЗржЬ</p>
          </div>
          <div className="grid md:grid-cols-3 gap-8">
            {packages.map((pkg, index) => (
              <div
                key={index}
                className={`rounded-2xl p-8 ${
                  pkg.popular
                    ? 'bg-gradient-to-br from-blue-500 to-purple-600 text-white transform scale-105 shadow-2xl'
                    : 'bg-white border-2 border-gray-200 shadow-lg'
                }`}
              >
                {pkg.popular && (
                  <div className="bg-yellow-400 text-blue-900 px-4 py-1 rounded-full text-sm font-bold inline-block mb-4">
                    ржкрзНрж░рж╕рзНрждрж╛ржмрж┐ржд
                  </div>
                )}
                <h3 className={`text-2xl font-bold mb-2 ${pkg.popular ? 'text-white' : 'text-gray-800'}`}>
                  {pkg.name}
                </h3>
                <div className="mb-6">
                  <span className="text-4xl font-bold">рз│{pkg.price}</span>
                  <span className={pkg.popular ? 'text-gray-200' : 'text-gray-600'}>/{pkg.duration}</span>
                </div>
                <ul className="space-y-3 mb-8">
                  {pkg.features.map((feature, idx) => (
                    <li key={idx} className="flex items-center gap-2">
                      <span className={pkg.popular ? 'text-yellow-300' : 'text-green-500'}>тЬУ</span>
                      <span className={pkg.popular ? 'text-gray-100' : 'text-gray-700'}>{feature}</span>
                    </li>
                  ))}
                </ul>
                <Link
                  to="/contact"
                  className={`block text-center py-3 rounded-full font-bold transition ${
                    pkg.popular
                      ? 'bg-white text-blue-600 hover:bg-gray-100'
                      : 'bg-blue-500 text-white hover:bg-blue-600'
                  }`}
                >
                  ржЕрж░рзНржбрж╛рж░ ржХрж░рзБржи
                </Link>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-16 bg-gradient-to-r from-blue-500 to-purple-600 text-white">
        <div className="max-w-4xl mx-auto px-4 text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-6">
            ржЖржЬржЗ рждрзИрж░рж┐ ржХрж░рзБржи ржЖржкржирж╛рж░ ржкрзНрж░ржлрзЗрж╢ржирж╛рж▓ ржмрзНрж░рзНржпрж╛ржирзНржб ржкрзЗржЬ
          </h2>
          <p className="text-xl mb-8 text-gray-100">
            рзирзк ржШржгрзНржЯрж╛ржпрж╝ рж╕ржорзНржкрзВрж░рзНржг рж╕рзЗржЯржЖржк ржПржмржВ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐
          </p>
          <Link
            to="/contact"
            className="bg-white text-blue-600 px-10 py-4 rounded-full font-bold text-lg hover:bg-gray-100 inline-block transform hover:scale-105 transition"
          >
            ржПржЦржиржЗ ржЕрж░рзНржбрж╛рж░ ржХрж░рзБржи тЖТ
          </Link>
        </div>
      </section>
    </div>
  );
};

export default BrandPageSetup;
